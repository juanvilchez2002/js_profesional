{"id":"ejercicios/prototype-inheritance.html","dependencies":[{"name":"/mnt/c/Users/JUAN VILCHEZ/Desktop/Cursos Online/Arquitecto Front End/16. JS Profesional/js_profesional/package.json","includedInParent":true,"mtime":1617844737972}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>Herencia Prototipal</title>\n</head>\n<body>\n    <a href=\"/ejercicios/\">Go Back</a>\n    <p><em>Abre la consola</em></p>\n    <script>function Hero(name) {\n  this.name = name;\n}\n\nHero.prototype.saludar = function () {\n  console.log(\"Hola soy, \".concat(this.name));\n};\n\nvar zelda = new Hero('Zelda'); //propiedades de la instancia\n\nconsole.log(\"name: \", zelda.name); //propieades de la 'clase'        \n\nconsole.log(\"name: \", zelda.saludar); //propieades heredadas ej: toString\n\nconsole.log(\"toString: \", zelda.toString); //hasOnwnProperty -> sirve para verificar si una propiedad es parte del objeto o \n//si viene heredada desde su prototype chain\n\nconsole.log('zelda.hasOwnProperty(\"name\")', zelda.hasOwnProperty(\"name\")); //inspeccionemos el prototipo del zelda\n//inspeccionemos el prototipo del Hero\n//inspeccionemos el prototipo del Object</script>\n</body>\n</html>\n"},"sourceMaps":null,"error":null,"hash":"ca0eeba00f8c09a87f0a83c5ccc2a147","cacheData":{"env":{}}}