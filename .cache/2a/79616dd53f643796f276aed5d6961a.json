{"id":"ejercicios/this.html","dependencies":[{"name":"/mnt/c/Users/JUAN VILCHEZ/Desktop/Cursos Online/Arquitecto Front End/16. JS Profesional/js_profesional/package.json","includedInParent":true,"mtime":1617844737972}],"generated":{"html":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>This</title>\n</head>\n<body>\n    <a href=\"/ejercicios/\">Go Back</a>\n    <p><em>Abre la consola</em></p>\n    <h1>\n        <code>This</code> se refiere a un objeto. Ese objeto es el que actualmente esta ejecutando\n        un pedazo de código.\n    </h1>\n    <script>//this en el scope global\nconsole.log(\"This es: \".concat(this)); //this en el scope de una función\n\nfunction whoIsThis() {\n  return this;\n}\n\nconsole.log(\"whoIsThis() es: \".concat(whoIsThis())); //this en el scope de una función en 'strict mode': \n\nfunction whoIsThisStrict() {\n  \"use strict\"; // aquí lo limito que sea en esta function\n\n  return this;\n}\n\nconsole.log(\"whoIsThisStrict() es: \".concat(whoIsThisStrict())); //this en el contexto de un objeto\n\nvar person = {\n  name: 'Juan',\n  saludar: function saludar() {\n    console.log(\"Hola soy \".concat(this.name));\n  }\n};\nperson.saludar(); //this cuando sacamos a una función de un objeto\n\nvar accion = person.saludar;\naccion(); //this en el contexto de una clase\n\nfunction Person(name) {\n  //this = {}\n  this.name = name;\n}\n\nPerson.prototype.saludar = function () {\n  console.log(\"Me llamo \".concat(this.name));\n};\n\nvar juan = new Person('Juan');\njuan.saludar();</script>\n</body>\n</html>"},"sourceMaps":null,"error":null,"hash":"9706bf3df583becf91b22f0f57fe7c4f","cacheData":{"env":{}}}